// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 用户表
model User {
  userId     Int        @id @default(autoincrement())
  username   String     @unique @db.VarChar(50)
  password   String     @db.VarChar(255)
  nickname   String     @db.VarChar(50)
  email      String?    @db.VarChar(100)
  phone      String?    @db.VarChar(20)
  avatar     String?    @db.VarChar(255)
  status     Int        @default(1) @db.TinyInt // 0:禁用 1:正常
  createTime DateTime   @default(now()) @map("create_time")
  updateTime DateTime   @updatedAt @map("update_time")
  
  userRoles  UserRole[]
  
  @@map("sys_user")
}

// 角色表
model Role {
  roleId     Int        @id @default(autoincrement())
  roleName   String     @db.VarChar(50)
  roleKey    String     @unique @db.VarChar(50)
  roleSort   Int        @default(0)
  status     Int        @default(1) @db.TinyInt // 0:禁用 1:正常
  remark     String?    @db.VarChar(500)
  createTime DateTime   @default(now()) @map("create_time")
  updateTime DateTime   @updatedAt @map("update_time")
  
  userRoles  UserRole[]
  roleMenus  RoleMenu[]
  
  @@map("sys_role")
}

// 菜单表
model Menu {
  menuId     Int        @id @default(autoincrement())
  menuName   String     @db.VarChar(50)
  parentId   Int        @default(0)
  orderNum   Int        @default(0)
  path       String?    @db.VarChar(200)
  component  String?    @db.VarChar(255)
  menuType   String     @db.Char(1) // M:目录 C:菜单 F:按钮
  visible    Int        @default(1) @db.TinyInt // 0:隐藏 1:显示
  status     Int        @default(1) @db.TinyInt // 0:禁用 1:正常
  perms      String?    @db.VarChar(100) // 权限标识
  icon       String?    @db.VarChar(100)
  remark     String?    @db.VarChar(500)
  createTime DateTime   @default(now()) @map("create_time")
  updateTime DateTime   @updatedAt @map("update_time")
  
  roleMenus  RoleMenu[]
  
  @@map("sys_menu")
}

// 字典类型表
model Dict {
  dictId     Int        @id @default(autoincrement())
  dictName   String     @db.VarChar(100)
  dictType   String     @unique @db.VarChar(100)
  status     Int        @default(1) @db.TinyInt // 0:禁用 1:正常
  remark     String?    @db.VarChar(500)
  createTime DateTime   @default(now()) @map("create_time")
  updateTime DateTime   @updatedAt @map("update_time")
  
  @@map("sys_dict_type")
}

// 字典数据表
model DictData {
  dictCode   Int        @id @default(autoincrement())
  dictSort   Int        @default(0)
  dictLabel  String     @db.VarChar(100)
  dictValue  String     @db.VarChar(100)
  dictType   String     @db.VarChar(100)
  cssClass   String?    @db.VarChar(100)
  listClass  String?    @db.VarChar(100)
  isDefault  Int        @default(0) @db.TinyInt // 0:否 1:是
  status     Int        @default(1) @db.TinyInt // 0:禁用 1:正常
  remark     String?    @db.VarChar(500)
  createTime DateTime   @default(now()) @map("create_time")
  updateTime DateTime   @updatedAt @map("update_time")
  
  @@map("sys_dict_data")
}

// 配置表
model Config {
  configId   Int        @id @default(autoincrement())
  configName String     @db.VarChar(100)
  configKey  String     @unique @db.VarChar(100)
  configValue String    @db.VarChar(500)
  configType String     @db.VarChar(20) // system:系统配置 business:业务配置
  remark     String?    @db.VarChar(500)
  createTime DateTime   @default(now()) @map("create_time")
  updateTime DateTime   @updatedAt @map("update_time")
  
  @@map("sys_config")
}

// 用户角色关系表
model UserRole {
  userId     Int
  roleId     Int
  
  user       User @relation(fields: [userId], references: [userId], onDelete: Cascade)
  role       Role @relation(fields: [roleId], references: [roleId], onDelete: Cascade)
  
  @@id([userId, roleId])
  @@map("sys_user_role")
}

// 角色菜单关系表
model RoleMenu {
  roleId     Int
  menuId     Int
  
  role       Role @relation(fields: [roleId], references: [roleId], onDelete: Cascade)
  menu       Menu @relation(fields: [menuId], references: [menuId], onDelete: Cascade)
  
  @@id([roleId, menuId])
  @@map("sys_role_menu")
}

